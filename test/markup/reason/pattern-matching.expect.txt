<span class="hljs-keyword">let</span> message =
  <span class="hljs-keyword">switch</span> (person1) {
    | <span class="hljs-module-identifier">School</span>.<span class="hljs-constructor">Teacher</span> =&gt; <span class="hljs-string">"Hello teacher!"</span>
    | <span class="hljs-module-identifier">School</span>.<span class="hljs-constructor">Director</span> =&gt; <span class="hljs-string">"Hello director!"</span>
  };

<span class="hljs-keyword">let</span> message =
  <span class="hljs-module-identifier">School</span>.(
    <span class="hljs-keyword">switch</span> (person1) {
    | <span class="hljs-constructor">Teacher</span> =&gt; <span class="hljs-string">"Hello teacher!"</span>
    | <span class="hljs-constructor">Director</span> =&gt; <span class="hljs-string">"Hello director!"</span>
    }
  );

<span class="hljs-keyword">let</span> readCacheServiceConfigAndDecode = (configJson) =&gt;
  <span class="hljs-keyword">switch</span> (configJson <span class="hljs-operator">|&gt;</span> <span class="hljs-module-identifier">Js</span>.<span class="hljs-module-identifier">Json</span>.decodeObject) {
  | <span class="hljs-constructor">None</span> =&gt; <span class="hljs-keyword">raise</span>(<span class="hljs-module-identifier">Json</span>.<span class="hljs-module-identifier">Decode</span>.<span class="hljs-constructor">DecodeError</span>(<span class="hljs-string">"Invalid Cache Config"</span>))
  | <span class="hljs-constructor">Some</span>(data) =&gt;
    data <span class="hljs-operator">|&gt;</span> <span class="hljs-module-identifier">Js</span>.<span class="hljs-module-identifier">Dict</span>.map((. json) =&gt; <span class="hljs-module-identifier">CachingServiceConfig</span>.decode(json))
  };
